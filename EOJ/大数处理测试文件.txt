#include <iostream>
using namespace std;

int EOJ_solution_2568(void) {
	//2种考虑：
	//第一种，利用数组・字符来储存大数字，并且对相应的每一位上进行处理，最后得到一个结果并输出。
	//第二种，最直观的，利用内置的类型储存数字，直接计算并且输出。（从题目的意思来看不太可能是这种）
	int n;
	int j;
	int temp;
	int count_a, count_b;		//a,b的位数
	char a[11], b[11] = { '0' };	//初始化数组a,b，之所以留11位而非10位是为了使用时a[0],b[0]空置为0，以便进位运算
	//char形的初始化也是初始成为0吗？
	for (int i = 0;i < n;i++) {
		count_a = 0;count_b = 0;
		//-----输入数据：需要记录各个数据以及a,b的位数count_a/b-----
		j = 0;
		while (cin.get(a[j])) {
			if (a[j] == ' ')break;
			count_a++;
			j++;
		}

		j = 0;
		while (cin.get(b[j])) {
			if (b[j] == '\n')break;
			count_b++;
			j++;
		}
		//-----令数据右端对齐（即尾端平移到a/b[10]处）-----
		j = 0;
		while (count_a != 0) {
			a[10 - j] = a[count_a];
			a[count_a] = 0;
			j++;
			count_a--;
		}

		j = 0;
		while (count_b != 0) {
			b[10 - j] = b[count_b];
			b[count_b] = 0;
			j++;
			count_b--;
		}
		//-----按位运算-----
		temp = 0;
		for (j = 10;j >= 0;j--) {
			if (int(a[j]) + int(b[j]) + temp >= 106) {
				temp = 1;
			}
			else temp = 0;
		}
	}

	return 0;
}