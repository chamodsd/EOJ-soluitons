#include <iostream>
using namespace std;

//应采用双向队列考虑问题
//1.把所有数字放入双向队列
//2.比较队头与队尾，如果
//	1)队头>队尾，则队头2个元素合并，操作数++；
//	2)队头<队尾，则队尾2个元素合并，操作数++；
//	3)队头=队尾，队头，队尾同时出队。
//3.直到队伍置空，程序结束，输出结果。

//为了简化操作，现用数组来考虑问题。
//设置一个充分大的数组，
//1.把所有数字放入数组a[]，初始化两个变量i,j监控位置，a[i]放入数组第一个元素，a[j]为放入数组的最后一个元素，初始化n监控已经操作的次数
//2.比较a[i],a[j]，如果
//	1)a[i]>a[j]，则队头2个元素合并，i++；n++；
//	2)a[i]<a[j]，则队尾2个元素合并，j--；n++；
//	3)a[i]=a[j]，队头，队尾同时出队。
//3.直到i=j，程序结束，输出结果n。
int solution_3686() {
	long long n, a[1000000], i, j;
	long long res = 0;
	cin >> n;
	for (i = 0;i < n;i++) cin >> a[i]; 
	i = 0;
	j = n - 1;
	while (i != j) {
		if (a[i] == a[j]) {
			if (i + 1 == j)break;
			i++;j--;
		}
		else if (a[i] < a[j]) {
			a[i + 1] += a[i];
			i++;
			res++;
		}
		else if (a[i] > a[j]) {
			a[j - 1] += a[j];
			j--;
			res++;
		}
	}
	cout << res;
	return 0;
}